---
openapi: 3.0.1
info:
  title: Generated API
  version: "1.0"
paths:
  /authprovider/accesstoken/{replacedToken}:
    put:
      parameters:
      - name: replacedToken
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthClientCredentials'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonObject'
  /authprovider/auth/sessions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        200:
          description: OK
  /authprovider/clients:
    get:
      parameters:
      - name: accessToken
        in: query
        schema:
          type: string
      - name: redirectUrl
        in: query
        schema:
          type: string
      - name: state
        in: query
        schema:
          type: string
      responses:
        200:
          description: OK
  /authprovider/clients/client/accesstoken:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthClientCredentials'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonObject'
  /authprovider/dev:
    get:
      responses:
        200:
          description: OK
  /authprovider/error:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEntry'
      responses:
        200:
          description: OK
  /authprovider/heartbeats:
    get:
      parameters:
      - name: heartbeatId
        in: query
        schema:
          type: string
      responses:
        200:
          description: OK
  /authprovider/jwt:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshAccessTokenPayload'
      responses:
        200:
          description: OK
  /authprovider/jwt/public-key:
    get:
      responses:
        200:
          description: OK
  /authprovider/jwt/{refreshToken}:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        200:
          description: OK
  /authprovider/profiles/profile:
    get:
      responses:
        200:
          description: OK
  /authprovider/profiles/profile/data:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileDataPayload'
      responses:
        200:
          description: OK
  /authprovider/profiles/profile/password:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordPayload'
      responses:
        200:
          description: OK
  /authprovider/registration/confirmation:
    get:
      parameters:
      - name: code
        in: query
        schema:
          type: string
      responses:
        200:
          description: OK
  /authprovider/temppwd:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeTempPasswordPayload'
      responses:
        200:
          description: OK
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTempPasswordPayload'
      responses:
        200:
          description: OK
  /authprovider/users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpCredentials'
      responses:
        200:
          description: OK
  /authprovider/users/import:
    get:
      responses:
        200:
          description: OK
  /authprovider/users/user:
    get:
      responses:
        200:
          description: OK
  /authprovider/version:
    get:
      responses:
        200:
          description: OK
  /authprovider/profiles/profile/{uuid}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthClientCredentials'
      responses:
        200:
          description: OK
  /authprovider/profiles/profile/{uuid}/data:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeProfileDataPayload'
      responses:
        200:
          description: OK
  /authprovider/profiles/profile/{uuid}/password:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeProfilePasswordPayload'
      responses:
        200:
          description: OK
components:
  schemas:
    LogEntry:
      type: object
      properties:
        clientAccessToken:
          type: string
        level:
          enum:
          - All
          - Debug
          - Error
          - Fatal
          - Info
          - false
          - Warn
          type: string
        message:
          type: string
        timestamp:
          format: int64
          type: integer
    OAuthClientCredentials:
      type: object
      properties:
        clientId:
          maxLength: 50
          pattern: \S
          type: string
          nullable: false
        clientSecret:
          maxLength: 50
          pattern: \S
          type: string
          nullable: false
        nonce:
          maxLength: 36
          type: string
    JsonObject:
      type: object
    ProfileDataPayload:
      required:
      - email
      - loginName
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 1
          type: string
          nullable: false
        loginName:
          maxLength: 255
          type: string
          nullable: false
        nachname:
          maxLength: 100
          minLength: 1
          type: string
        vorname:
          maxLength: 100
          minLength: 1
          type: string
    ChangePasswordPayload:
      required:
      - passwort
      - twoPasswords
      type: object
      properties:
        passwort:
          type: string
          nullable: false
        twoPasswords:
          required:
          - passwort
          - passwortWdh
          type: object
          properties:
            passwort:
              type: string
              nullable: false
            passwortWdh:
              type: string
              nullable: false
          nullable: false
    LoginCredentials:
      required:
      - authorizationCredentials
      - clientCredentials
      type: object
      properties:
        authorizationCredentials:
          required:
          - loginName
          - passwort
          type: object
          properties:
            kleber:
              type: string
            loginName:
              maxLength: 255
              type: string
              nullable: false
            passwort:
              type: string
              nullable: false
          nullable: false
        clientCredentials:
          type: object
          properties:
            accessToken:
              maxLength: 50
              pattern: \S
              type: string
              nullable: false
            redirectUrl:
              pattern: \S
              type: string
              nullable: false
            state:
              maxLength: 150
              type: string
          nullable: false
    RefreshAccessTokenPayload:
      required:
      - clientAccessToken
      - userRefreshToken
      type: object
      properties:
        clientAccessToken:
          type: array
          items:
            type: string
          nullable: false
        force:
          type: boolean
        userRefreshToken:
          type: string
          nullable: false
    ChangeTempPasswordPayload:
      required:
      - email
      - tempPassword
      - tokenId
      - twoPasswords
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 1
          type: string
          nullable: false
        tempPassword:
          maxLength: 40
          minLength: 1
          type: string
          nullable: false
        tokenId:
          maxLength: 40
          minLength: 1
          type: string
          nullable: false
        twoPasswords:
          required:
          - passwort
          - passwortWdh
          type: object
          properties:
            passwort:
              type: string
              nullable: false
            passwortWdh:
              type: string
              nullable: false
          nullable: false
    OrderTempPasswordPayload:
      required:
      - email
      type: object
      properties:
        clientCredentials:
          type: object
          properties:
            accessToken:
              maxLength: 50
              pattern: \S
              type: string
              nullable: false
            redirectUrl:
              pattern: \S
              type: string
              nullable: false
            state:
              maxLength: 150
              type: string
        email:
          maxLength: 255
          minLength: 1
          type: string
          nullable: false
        kleber:
          type: string
    SignUpCredentials:
      required:
      - clientCredentials
      - email
      - loginName
      - twoPasswords
      type: object
      properties:
        agbGelesen:
          type: boolean
        clientCredentials:
          type: object
          properties:
            accessToken:
              maxLength: 50
              pattern: \S
              type: string
              nullable: false
            redirectUrl:
              pattern: \S
              type: string
              nullable: false
            state:
              maxLength: 150
              type: string
          nullable: false
        email:
          maxLength: 255
          minLength: 1
          type: string
          nullable: false
        groups:
          maxLength: 150
          type: string
        kleber:
          type: string
        loginName:
          maxLength: 255
          type: string
          nullable: false
        nachname:
          maxLength: 100
          minLength: 1
          type: string
        twoPasswords:
          required:
          - passwort
          - passwortWdh
          type: object
          properties:
            passwort:
              type: string
              nullable: false
            passwortWdh:
              type: string
              nullable: false
          nullable: false
        vorname:
          maxLength: 100
          minLength: 1
          type: string
    ChangeProfileDataPayload:
      required:
      - clientCredentials
      - profileData
      type: object
      properties:
        clientCredentials:
          type: object
          properties:
            clientId:
              maxLength: 50
              pattern: \S
              type: string
              nullable: false
            clientSecret:
              maxLength: 50
              pattern: \S
              type: string
              nullable: false
            nonce:
              maxLength: 36
              type: string
          nullable: false
        profileData:
          required:
          - email
          - loginName
          type: object
          properties:
            email:
              maxLength: 255
              minLength: 1
              type: string
              nullable: false
            loginName:
              maxLength: 255
              type: string
              nullable: false
            nachname:
              maxLength: 100
              minLength: 1
              type: string
            vorname:
              maxLength: 100
              minLength: 1
              type: string
          nullable: false
    ChangeProfilePasswordPayload:
      required:
      - clientCredentials
      - passwordPayload
      type: object
      properties:
        clientCredentials:
          type: object
          properties:
            clientId:
              maxLength: 50
              pattern: \S
              type: string
              nullable: false
            clientSecret:
              maxLength: 50
              pattern: \S
              type: string
              nullable: false
            nonce:
              maxLength: 36
              type: string
          nullable: false
        passwordPayload:
          required:
          - passwort
          - twoPasswords
          type: object
          properties:
            passwort:
              type: string
              nullable: false
            twoPasswords:
              required:
              - passwort
              - passwortWdh
              type: object
              properties:
                passwort:
                  type: string
                  nullable: false
                passwortWdh:
                  type: string
                  nullable: false
              nullable: false
          nullable: false