---
openapi: 3.0.3
info:
  title: mja-api
  description: API für meine Benutzerverwaltung
  contact:
    name: Heike Winkelvoß
    url: https://mathe-jung-alt.de
    email: info@egladil.de
  license:
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 3.0.0
servers:
- url: http://localhost:9020
  description: Auto generated value
- url: http://0.0.0.0:9020
  description: Auto generated value
tags:
- name: BenutzerResource
- name: InfomailsResource
- name: MailingResource
- name: SessionResource
- name: VersandauftraegeResource
paths:
  /auth-admin-api/benutzer:
    post:
      tags:
      - BenutzerResource
      summary: "Gibt alle Benutzer zurück, die auf die gegebene Suchanfrage passen."
      operationId: findUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BenutzerSuchparameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BenutzerSearchResult"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/benutzer/loeschung:
    put:
      tags:
      - BenutzerResource
      summary: Löscht die durch die uuids definierten Benutzerkonten vollständig aus
        allen Anwendungen.
      operationId: batchDelete
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteBenutzerResponseDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/benutzer/{uuid}:
    put:
      tags:
      - BenutzerResource
      summary: Setzt für den gegebenen Benutzer den neuen Aktivierungsstatus
      operationId: aktivierungsstatusAendern
      parameters:
      - name: uuid
        in: path
        description: "UUID des Benutzers, der geändert werden soll"
        required: true
        schema:
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
        example: a4c4d45e-4a81-4bde-a6a3-54464801716d
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Aktivierungsstatus"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateBenutzerResponseDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
        "404":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
    delete:
      tags:
      - BenutzerResource
      summary: Löscht das durch die uuid definierte Benutzerkonto vollständig aus
        allen Anwendungen.
      operationId: benutzerLoeschen
      parameters:
      - name: uuid
        in: path
        description: "UUID des Benutzers, der gelöscht werden soll"
        required: true
        schema:
          type: string
        example: a4c4d45e-4a81-4bde-a6a3-54464801716d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteBenutzerResponseDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/infomails:
    get:
      tags:
      - InfomailsResource
      summary: Gibt alle gespeicherten Infomailtexte zurück.
      operationId: loadInfomails
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InfomailResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
    post:
      tags:
      - InfomailsResource
      summary: Legt eine Infomail an.
      operationId: infomailAnlegen
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfomailRequestDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfomailResponseDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/infomails/{uuid}:
    put:
      tags:
      - InfomailsResource
      summary: Ändert eine Infomail an.
      operationId: infomailAendern
      parameters:
      - name: uuid
        in: path
        description: "UUID der Infomail, die geändert werden soll"
        required: true
        schema:
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
        example: a4c4d45e-4a81-4bde-a6a3-54464801716d
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfomailRequestDto"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateInfomailResponseDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "404":
          description: wenn es die Entity mit der uuid gar nicht gibt
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/mails/testmail:
    get:
      tags:
      - MailingResource
      summary: Endpoint zum Testen der Mailerkonfiguration.
      operationId: sendTestMail
      parameters:
      - name: to
        in: query
        schema:
          type: string
      responses:
        "202": {}
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/session/authurls/login:
    get:
      tags:
      - SessionResource
      summary: "Gibt die Login-URL zurück, mit der eine Anwendung zum authprovider\
        \ redirecten kann"
      operationId: getLoginUrl
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
  /auth-admin-api/session/dev/logout/{sessionId}:
    delete:
      tags:
      - SessionResource
      summary: entfernt die Session (nur Dev)
      operationId: logoutDev
      parameters:
      - name: sessionId
        in: path
        description: id der Session
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
  /auth-admin-api/session/login:
    post:
      tags:
      - SessionResource
      summary: Erzeugt eine Session anhand des per S2S-Kommunikation für das 'one
        time token' beim authprovider gekauften JWT und packt die SessionId in ein
        Cookie
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthResult"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
  /auth-admin-api/session/logout:
    delete:
      tags:
      - SessionResource
      summary: entfernt die Session
      operationId: logout
      parameters:
      - name: JSESSIONID_AUTH_ADMIN_API
        in: cookie
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
  /auth-admin-api/versandauftraege:
    get:
      tags:
      - VersandauftraegeResource
      summary: Gibt alle gespeicherten Mailversandaufträge zurück.
      operationId: loadVersandauftraege
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MailversandauftragOverview"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
    post:
      tags:
      - VersandauftraegeResource
      summary: Legt einen Mailversandauftrag an.
      operationId: scheduleInfomailversand
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MailversandauftragRequestDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailversandauftragOverview"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "412":
          description: eine Voraussetzung ist nicht erfüllt. Beispielsweise gibt es
            keinen Infomailtext mit der gegebenen UUID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/versandauftraege/gruppen/{uuid}:
    get:
      tags:
      - VersandauftraegeResource
      summary: Läd die Details der durch die uuid definierten Mainversandgruppe
      operationId: getDetailsMailversandgruppe
      parameters:
      - name: uuid
        in: path
        description: UUID der Mailversandgruppe
        required: true
        schema:
          type: string
        example: a4c4d45e-4a81-4bde-a6a3-54464801716d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailversandgruppeDetailsResponseDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
    put:
      tags:
      - VersandauftraegeResource
      summary: Überschreibt die Daten der gegebenen Mailversandgruppe.
      operationId: versandgruppeAendern
      parameters:
      - name: uuid
        in: path
        description: UUID der Mailversandgruppe
        required: true
        schema:
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
        example: f8d11b4a-72df-4a05-ad76-ce3392a02438
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MailversandgruppeDetails"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailversandgruppeDetailsResponseDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/versandauftraege/{uuid}:
    get:
      tags:
      - VersandauftraegeResource
      summary: Läd die Details des durch die uuid definierten Mailversandauftrags
      operationId: getDetailsVersandauftrag
      parameters:
      - name: uuid
        in: path
        description: UUID des Mailversandauftrags
        required: true
        schema:
          type: string
        example: a4c4d45e-4a81-4bde-a6a3-54464801716d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailversandauftragDetailsResponseDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
    delete:
      tags:
      - VersandauftraegeResource
      summary: Löscht den durch die uuid definierten Mailversandauftrag
      operationId: versandauftragLoeschen
      parameters:
      - name: uuid
        in: path
        description: "UUID des Mailversandauftrags, der gelöscht werden soll"
        required: true
        schema:
          type: string
        example: a4c4d45e-4a81-4bde-a6a3-54464801716d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUuidDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/versandauftraege/{uuid}/cancellation:
    put:
      tags:
      - VersandauftraegeResource
      summary: Bricht den durch die uuid definierten Mailversandauftrag ab
      operationId: versandauftragAbbrechen
      parameters:
      - name: uuid
        in: path
        description: "UUID des Mailversandauftrags, der abgebrochen werden soll"
        required: true
        schema:
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
        example: a4c4d45e-4a81-4bde-a6a3-54464801716d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUuidDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/versandauftraege/{uuid}/continuation:
    put:
      tags:
      - VersandauftraegeResource
      summary: Setzt den durch die uuid definierten Mailversandauftrag fort
      operationId: versandauftragFortsetzen
      parameters:
      - name: uuid
        in: path
        description: "UUID des Mailversandauftrags, der fortgesetzt werden soll"
        required: true
        schema:
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
        example: a4c4d45e-4a81-4bde-a6a3-54464801716d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUuidDto"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidationErrorResponseDto"
        "401":
          content:
            application/json: {}
        "403":
          description: "kann auch vorkommen, wenn mod_security zuschlägt"
          content:
            application/json: {}
        "500":
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagePayload"
      security:
      - SecurityScheme: []
  /auth-admin-api/version:
    get:
      tags:
      - Version Resource
      responses:
        "200":
          description: OK
components:
  schemas:
    Aktivierungsstatus:
      description: DTO für den neuen Benutzerstatus
      type: object
      properties:
        aktiviert:
          type: boolean
    AuthResult:
      description: Ergebnis der Authentifizierung beim authprovider
      required:
      - nonce
      - idToken
      type: object
      properties:
        expiresAt:
          format: int64
          description: Gültigkeit des generierten Einmaltokens
          type: integer
        state:
          description: "ein Kontext, also Login oder SignUp"
          type: string
        nonce:
          description: "für die Autorisierung generierter String, der vom authprovider\
            \ unverändert zurückgegeben wird"
          pattern: \S
          type: string
        idToken:
          description: "Einmaltoken, mit dem sich der authprovider-Client das JWT\
            \ holen kann"
          pattern: \S
          type: string
    BenutzerSearchResult:
      description: Ergebnis der Suche
      type: object
      properties:
        anzahlGesamt:
          format: int32
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/BenutzerTrefferlisteItem"
    BenutzerSuchparameter:
      description: BenutzerSuchparameter. Gesucht wird mit und-Verknüpfung und like
      type: object
      properties:
        uuid:
          description: Teil der UUID eines Users
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
          example: 732b2ed8
        vorname:
          description: Teil des Vornamens eines Users
          maxLength: 100
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
          example: Rainer
        nachname:
          description: Teil des Nachnamens eines Users
          maxLength: 100
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
          example: Honig
        email:
          description: Teil der email eines Users
          maxLength: 255
          pattern: "^[a-zA-Z0-9\\.!#$%&'*+/=\\?\\^_`{|}~\\-@]*$"
          type: string
          example: egladil
        rolle:
          description: Teil der Rolle eines Users.
          maxLength: 150
          pattern: "^[A-Za-z_,]*$"
          type: string
          example: STANDARD
        aenderungsdatum:
          description: "Teil des Datums, an dem die Daten das letzte Mal geändert\
            \ wurden - meist letztes Login Format '2019-09-14 18:40:06'"
          maxLength: 19
          pattern: "^[\\d\\-.:]*$"
          type: string
          example: "2021"
        sortByLabelname:
          description: "Name des Feldes, nach dem sortiert werden soll. Der Name muss\
            \ sich auf die enum UsersSortColumn abbilden lassen"
          maxLength: 100
          pattern: "^[A-Za-zäöüßÄÖÜ\\-_ ]*$"
          type: string
          example: vorname
        pageIndex:
          format: int32
          description: "Pagination: welche Seite wird abgefragt"
          default: 0
          type: integer
          example: 2
        pageSize:
          format: int32
          description: "Pagination: wievile Treffer werden abgefragt"
          default: 25
          type: integer
          example: 25
        sortDirection:
          description: Sortierreihenfolge (asc oder desc)
          type: string
          allOf:
          - $ref: "#/components/schemas/SortDirection"
          example: asc
    BenutzerTrefferlisteItem:
      description: "Ein Elememt der Trefferliste. Es sind die Attribute, nach denen\
        \ auch gesucht werden kann."
      type: object
      properties:
        uuid:
          description: UUID des Users
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
          example: 732b2ed8-b9b7-4800-8685-38fd09d330cf
        vorname:
          description: Vorname eines Users
          maxLength: 100
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
          example: Rainer
        nachname:
          description: ' Nachname eines Users'
          maxLength: 100
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
          example: Honig
        email:
          description: email eines Users
          maxLength: 255
          pattern: "^[a-zA-Z0-9\\.!#$%&'*+/=\\?\\^_`{|}~\\-@]*$"
          type: string
          example: test@egladil.de
        rollen:
          description: Rollen eines Users.
          maxLength: 150
          pattern: "^[A-Z_,]*$"
          type: string
          example: STANDARD
        aktiviert:
          description: "Flag ,ob der user aktiviert ist"
          type: boolean
          example: false
        aenderungsdatum:
          description: "Datum, an dem die Daten das letzte Mal geändert wurden - meist\
            \ letztes Login"
          maxLength: 19
          pattern: "^[\\d.\\-:]*$"
          type: string
          example: 2019-09-14 18:40:06
    DeleteBenutzerResponseDto:
      description: Response-Objekt für das Löschen eines Benutzers
      type: object
      properties:
        uuid:
          description: UUID des Users
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
          example: 732b2ed8-b9b7-4800-8685-38fd09d330cf
    InfomailRequestDto:
      description: Betreff und Text für eine Infomail
      required:
      - betreff
      - mailtext
      type: object
      properties:
        betreff:
          maxLength: 100
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
        mailtext:
          maxLength: 65535
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°\\s]*$"
          type: string
    InfomailResponseDto:
      description: eine Infomail
      type: object
      properties:
        uuid:
          description: UUID des Infomailtextes
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
          example: 5eaaf0ed-4949-4ccd-a9c3-2db9af3559c2
        betreff:
          description: "Betreff der Mail, die versendet weren wird"
          maxLength: 100
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
        mailtext:
          description: "Text der Mail, die versendet werden wird"
          maxLength: 65535
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
        uuidsMailversandauftraege:
          description: UUIDs der Versandaufträge mit diesem oder einem angepassten
            Mailtext
          type: array
          items:
            type: string
    Jobstatus:
      enum:
      - WAITING
      - IN_PROGRESS
      - CANCELLED
      - COMPLETED
      - ERRORS
      type: string
    MailversandauftragDetails:
      description: Auftrag für einen Sammelmailversand zur Anzeige in der GUI
      type: object
      properties:
        uuid:
          description: die technische ID
          type: string
          example: 78573dc4-06d7-43f1-9b85-ae79f36c92b7
        idInfomailtext:
          description: ID des gespeicherten Mailtexts und Betreffs
          type: string
          example: 663d1c4e-46b7-4b41-a3cc-c753b8f7148c
        betreff:
          description: "Betreff der Mail, die versendet weren wird"
          maxLength: 100
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
        mailtext:
          description: "Text der Mail, die versendet werden wird"
          maxLength: 65535
          pattern: "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄäÀàÁáÂâ\
            ÃãĀāÅåĂăĄąǍǎǞǟǺǻẠạẪẫẬẢảẤấẦầẮắªẰằẲẳẴẵẶặÆæǼǽḂḃÇçĆćĊċČčÐðĎďĐđḊḋḐḑD̂d̂ÈèÉé\
            ÊêËëĒēĔĕĖėĘęĚěẼẽỄễẸẹẺẻỀềẾếỆệƏəḞḟĞğĠġĢģǤǥǦǧǴǵḠḡĦħȞȟḤḥḦḧÌìÍíÎîÏïĨĩĪīĬĭĮį\
            İıǏǐỊịỈỉĴĵǰJ̌ĶķǨǩḰḱĸĹĺĻļĽľĿŀŁłL̂l̂M̂m̂ṀṁN̂n̂ÑñŃńŅņŇňŊŋṄṅŉÖöÒòÓóÔôÕõŌōŎ\
            ŏŐőƠơǑǒǪǫǬǭǾǿȪȫȮȯȰȱỌọỎỏỖỗºỒồỐốỘộỜờỚớØøŒœṖṗŔŕŖŗŘřŚśŞşŠšȘșṠṡṢṣßẞŢţŤťŦŧȚț\
            ṪṫÞþÜüÙùÚúÛûŨũŪūŮůŰűŲųƯưǓǔỤụỦủỨứỪừỬửỮữỰựŴŵẀẁẂẃẄẅẌẍÝýŸÿŶŷȲȳẎẏỲỳỸỹỴỵỶỷƷʒ\
            ǮǯŹźŻżŽžẐẑẒẓ0123456789\" \\-_\\.,'`'\\@()/‘+:;=\\[\\]{}!#$§%&\\*\\?\\\\\
            ^|~°]*$"
          type: string
        versandJahrMonat:
          description: Jahr und Monat des Versands im Format YYYY-MM
          type: string
        status:
          description: Status des Auftrags
          type: string
          allOf:
          - $ref: "#/components/schemas/Jobstatus"
          example: IN_PROGRESS
        erfasstAm:
          description: "wie üblich formatiertes Datum mit Uhrzeit, wann der Auftrag\
            \ erfasst wurde"
          type: string
          example: 09.07.2024 18:44:13
        versandBegonnenAm:
          description: "wie üblich formatiertes Datum mit Uhrzeit, wann der Versand\
            \ begonnen hat"
          type: string
          example: 09.07.2024 19:01:43
        versandBeendetAm:
          description: "wie üblich formatiertes Datum mit Uhrzeit, wann der Versand\
            \ beendet wurde"
          type: string
          example: 09.07.2024 23:56:01
        anzahlEmpfaenger:
          format: int64
          description: "Anzahl der Benutzer, an die die Infomail gesendet wir bzw.\
            \ wurde"
          type: integer
          example: 4352
        anzahlVersendet:
          format: int64
          description: Anzahl bereits versendeter Mails
          type: integer
          example: 2524
        versandMitFehlern:
          description: "true, wenn eine der Sammelmails nicht fehlerfrei versendet\
            \ werden konnte, sonst false"
          type: boolean
        mailversandgruppen:
          description: "Die Gruppen von Mailempfängern, an die die Mail jeweils als\
            \ Sammelmail versendet wird / wurde"
          type: array
          items:
            $ref: "#/components/schemas/Mailversandgruppe"
    MailversandauftragDetailsResponseDto:
      description: Kombiniert uuid mit dem MailversandauftragDetailsDto.
      type: object
      properties:
        uuid:
          type: string
        versandauftrag:
          $ref: "#/components/schemas/MailversandauftragDetails"
    MailversandauftragOverview:
      type: object
      properties:
        uuid:
          description: die technische ID
          type: string
          example: 78573dc4-06d7-43f1-9b85-ae79f36c92b7
        idInfomailtext:
          description: ID des gespeicherten Mailtexts und Betreffs
          type: string
          example: 663d1c4e-46b7-4b41-a3cc-c753b8f7148c
        betreff:
          description: Mailbetreff
          type: string
          example: Aktivierung Ihres Benutzerkontos erforderlich
        erfasstAm:
          description: Erfasungsdatum
          type: string
          example: 16.07.2024 11:55:22
        status:
          description: Status des Auftrags
          type: string
          allOf:
          - $ref: "#/components/schemas/Jobstatus"
          example: COMPLETED
        anzahlEmpfaenger:
          format: int64
          description: "Anzahl der Benutzer, an die die Infomail gesendet werden sollte"
          type: integer
          example: 4352
        anzahlGruppen:
          format: int64
          description: Anzahl der Mailversandgruppen
          type: integer
          example: 28
    MailversandauftragRequestDto:
      description: Auftrag für einen Sammelmailversand zum Anlegen / Ändern
      type: object
      properties:
        idInfomailtext:
          description: ID des gespeicherten Mailtexts und Betreffs
          type: string
          example: 663d1c4e-46b7-4b41-a3cc-c753b8f7148c
        benutzerUUIDs:
          description: "die UUIDs der ausgewählten Benutzer, an die die Mails versendet\
            \ werden sollen"
          type: array
          items:
            type: string
    Mailversandgruppe:
      description: "Gruppe, an die eine Sammelmail gesendet wurde"
      type: object
      properties:
        uuid:
          description: die technische ID
          type: string
          example: 78573dc4-06d7-43f1-9b85-ae79f36c92b7
        idMailversandauftrag:
          description: ID des Meilversandauftrags
          type: string
          example: 663d1c4e-46b7-4b41-a3cc-c753b8f7148c
        sortnr:
          format: int32
          description: fortlaufende Nummer zur Sortierung
          type: integer
        status:
          description: der Status des Versands dieser Mail
          type: string
          allOf:
          - $ref: "#/components/schemas/Jobstatus"
          example: WAITING
        empfaengerUUIDs:
          description: die UUIDs der Benutzer
          type: array
          items:
            type: string
        aenderungsdatum:
          description: Datum der letzten Änderung
          type: string
    MailversandgruppeDetails:
      description: Deteils einer Mailversandgruppe
      type: object
      properties:
        uuid:
          description: die technische ID
          type: string
          example: 78573dc4-06d7-43f1-9b85-ae79f36c92b7
        idInfomailtext:
          description: ID des gespeicherten Mailtexts und Betreffs
          type: string
          example: 663d1c4e-46b7-4b41-a3cc-c753b8f7148c
        sortnr:
          format: int32
          description: fortlaufende Nummer zur Sortierung
          type: integer
        status:
          description: der Status des Versands dieser Mail
          type: string
          allOf:
          - $ref: "#/components/schemas/Jobstatus"
          example: WAITING
        aenderungsdatum:
          description: Datum der letzten Änderung
          type: string
        benutzer:
          description: "Benutzer, an die die Mail versendet wurde. Wenn sie inzwischen\
            \ gelöscht sind, wird ein Platzhalter zurückgegeben"
          type: array
          items:
            $ref: "#/components/schemas/BenutzerTrefferlisteItem"
    MailversandgruppeDetailsResponseDto:
      type: object
      properties:
        uuid:
          description: die technische ID
          type: string
          example: 78573dc4-06d7-43f1-9b85-ae79f36c92b7
        mailversandgruppe:
          description: "falls noch vorhanden, die Details der Mailversandgruppe, sonst\
            \ null"
          type: object
          allOf:
          - $ref: "#/components/schemas/MailversandgruppeDetails"
    MessagePayload:
      description: eine kategorisierte Meldung
      type: object
      properties:
        level:
          description: "Level der Message: INFO | WARN | ERROR"
          type: string
        message:
          description: die message
          type: string
    OAuthClientCredentials:
      description: credentials des OAuth2-Clients beim authprovider
      required:
      - clientId
      - clientSecret
      type: object
      properties:
        clientId:
          description: ID des authprovider-Clients
          maxLength: 50
          pattern: "[a-zA-Z0-9+=]*"
          type: string
        clientSecret:
          description: secret des authprovider-Clients
          maxLength: 50
          pattern: "[a-zA-Z0-9+=]*"
          type: string
        nonce:
          description: "zur Authentifizierung des Clients generierter String, der\
            \ vom authprovider unverändert zurückgegeben wird"
          maxLength: 36
          pattern: "[a-zA-Z0-9\\-]*"
          type: string
    ResponsePayload:
      description: "generisches Response-Objekt, das ein MessagePayload und ggf. Daten\
        \ enthält"
      type: object
      properties:
        message:
          description: das MessagePayload
          type: object
          allOf:
          - $ref: "#/components/schemas/MessagePayload"
        data:
          description: daten die als JSON mitgegeben werden. Kann null sein
    SingleUuidDto:
      description: Response-Objekt für das Löschen eines Benutzers
      type: object
      properties:
        uuid:
          description: UUID des Mailversandauftrags
          maxLength: 36
          pattern: "^[abcdef\\d\\-]*$"
          type: string
          example: 732b2ed8-b9b7-4800-8685-38fd09d330cf
    SortDirection:
      enum:
      - asc
      - desc
      type: string
    UpdateBenutzerResponseDto:
      description: "Ergebnis nach dem Ändern des Benutzers. Attribut benutzer wird\
        \ null sein, wenn statusCode != 200"
      type: object
      properties:
        uuid:
          type: string
        benuzer:
          $ref: "#/components/schemas/BenutzerTrefferlisteItem"
    UpdateInfomailResponseDto:
      description: "Ergebnis nach dem Ändern des InfomailTexts. Attribut infomail\
        \ wird null sein, wenn statusCode != 200"
      type: object
      properties:
        uuid:
          type: string
        infomail:
          $ref: "#/components/schemas/InfomailResponseDto"
    ValidationErrorResponseDto:
      type: object
      properties:
        fieldName:
          type: string
        message:
          type: string
  securitySchemes:
    SecurityScheme:
      type: http
      description: Authentication
      scheme: bearer
      bearerFormat: JWT
